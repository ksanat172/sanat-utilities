{"version":3,"sources":["reducers/homereducer.js","redux/combine-reducers.js","reducers/selctors.js","apiRequests/homeApi.js","sagas/homesaga.js","sagas/rootSaga.js","redux/store.js","flux/AppDispatcher.js","stores/HomeStore.js","components/home/container/home.jsx","App.js","reportWebVitals.js","index.js"],"names":["initialState","usersData","reducer","state","action","type","data","reducers","combineReducers","homereducer","homeState","homeapi","uri","methodType","content","url","Promise","resolve","reject","method","request","XMLHttpRequest","open","setRequestHeader","onload","response","getResponseHeader","includes","JSON","parse","send","stringify","setUserToState","displayUsers","addUser","removeUser","watchDisplayUsersFunction","watchAddUserFunction","watchRemoveUserFunction","put","HomeAPI","executeAPI","call","console","log","user","select","stateData","newData","Name","filteredData","filter","userName","takeLatest","rootsaga","all","fork","sagaMiddleWare","createSagaMiddleware","store","createStore","applyMiddleware","thunk","run","rootSaga","appDispatcher","Dispatcher","this","dispatchToken","AppDispatcher","register","dispatcherCallback","bind","payload","connect","sagaResponse","dispatch","displayUser","props","getInput","e","target","value","addUserInputRef","removeUserInputRef","placeholder","onChange","ref","inputRef","onClick","addUserClick","removeUserClick","map","key","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bd6bd41.chunk.js","sourcesContent":["\r\nconst initialState = {usersData:[]};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n      case \"SET USER NAMES\":\r\n      return{\r\n        ...state,\r\n        usersData:action.data\r\n      }\r\n\r\n    default:return {\r\n      ...state\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducer;","\r\nimport { combineReducers } from 'redux';\r\nimport homereducer from '../reducers/homereducer';\r\n\r\n\r\nconst reducers = combineReducers({homereducer:homereducer});\r\n\r\nexport default reducers;","\r\nexport const homeState = (state) =>state.homereducer;","\r\nclass HomeAPI {\r\n  constructor() {}\r\n\r\n  executeAPI(uri, methodType, content = null) {\r\n    const url = \"https://sanat-node-server.herokuapp.com/\"+uri;\r\n    return new Promise((resolve, reject) => {\r\n      const method = methodType;\r\n      const request = new XMLHttpRequest();\r\n      request.open(method, url, true);\r\n      request.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\r\n\r\n      request.onload = function () {\r\n        const response = request.getResponseHeader(\"Content-Type\").includes(\"json\") ? JSON.parse(request.response) : request.response;\r\n        resolve(response);\r\n      };\r\n\r\n      if (content !=null ) request.send(JSON.stringify(content));\r\n      else request.send();\r\n    });\r\n  }\r\n}\r\n\r\nconst homeapi = new HomeAPI();\r\nexport default homeapi;\r\n\r\n\r\n// beforeSend: function (xhr) {\r\n//   xhr.setRequestHeader (\"Authorization\", \"Basic \" + btoa(username + \":\" + password));\r\n// },","import {fork,put,call,takeLatest, select} from 'redux-saga/effects';\r\nimport {homeState} from '../reducers/selctors';\r\nimport HomeAPI from '../apiRequests/homeApi';\r\n\r\nfunction* setUserToState(usersData){\r\n    yield put({\r\n        type:\"SET USER NAMES\",\r\n        data:usersData\r\n    })\r\n}\r\n\r\nfunction* displayUsers(){\r\n   const usersData = yield HomeAPI.executeAPI('getUsers','GET');\r\n        yield call(setUserToState,usersData)\r\n       console.log('User data:',usersData);\r\n}\r\n\r\nfunction* addUser({user}){\r\n    const content = {user};\r\n    yield HomeAPI.executeAPI('addUser','POST',content);\r\n    const stateData = yield select(homeState);\r\n    const newData = [...stateData.usersData,{Name:user}];\r\n    yield call(setUserToState,newData)\r\n}\r\n\r\nfunction* removeUser({user}){\r\n    const content = {user};\r\n    yield HomeAPI.executeAPI('removeUser','DELETE',content);\r\n    const stateData = yield select(homeState);\r\n    const filteredData = stateData.usersData.filter((userName)=> user !== userName.Name);\r\n    yield call(setUserToState,filteredData)\r\n}\r\n\r\n\r\nexport function* watchDisplayUsersFunction(){\r\n    yield takeLatest(\"DISPLAY USERS\",displayUsers);\r\n}\r\n\r\nexport function* watchAddUserFunction(){\r\n    yield takeLatest(\"ADD USER\",addUser)\r\n}\r\n\r\nexport function* watchRemoveUserFunction(){\r\n    yield takeLatest(\"REMOVE USER\",removeUser)\r\n}","import {\r\n  watchDisplayUsersFunction,\r\n  watchAddUserFunction,\r\n  watchRemoveUserFunction,\r\n} from \"./homesaga\";\r\nimport { fork, all } from \"redux-saga/effects\";\r\n\r\nexport default function* rootsaga() {\r\n  yield all([\r\n    fork(watchDisplayUsersFunction),\r\n    fork(watchAddUserFunction),\r\n    fork(watchRemoveUserFunction),\r\n  ]);\r\n}\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport combineReducers from './combine-reducers';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport thunk from 'redux-thunk';\r\nimport rootSaga from '../../src/sagas/rootSaga';\r\n\r\nconst sagaMiddleWare = createSagaMiddleware();\r\nconst store = createStore(combineReducers,applyMiddleware(sagaMiddleWare,thunk));\r\n\r\nsagaMiddleWare.run(rootSaga);\r\n\r\nexport default store;\r\n\r\n\r\n\r\n","import {Dispatcher} from 'flux';\r\n\r\nclass AppDispatcher extends Dispatcher{\r\n\r\n}\r\n\r\nconst appDispatcher = new AppDispatcher();\r\nexport default appDispatcher;","import AppDispatcher from \"../flux/AppDispatcher\";\r\n\r\nclass HomeStore {\r\n  constructor() {\r\n    this.dispatchToken = AppDispatcher.register(this.dispatcherCallback.bind(this));\r\n  }\r\n\r\n  dispatcherCallback(payload) {\r\n    const actionType = payload.type\r\n    switch(actionType){\r\n    case \"MY TYPE\":console.log(payload.data);\r\n    break;\r\n    }\r\n  }\r\n}\r\n\r\nconst homeStoreClass = new HomeStore();\r\nexport default homeStoreClass;","import { connect } from \"react-redux\"\r\nimport {createAction} from 'redux-actions';\r\nimport store from '../../../redux/store'\r\nimport AppDispatcher from '../../../flux/AppDispatcher';\r\nimport HomeStore from '../../../stores/HomeStore';\r\nimport APIRequest from '../../../apiRequests/homeApi';\r\n\r\nfunction Home(props){\r\n    const {usersData} = props.sagaResponse;\r\n\r\n    let userName = \"\";\r\n\r\n    const getInput = (e) => {\r\n       userName = e.target.value;\r\n    }\r\n\r\n    const addUserClick = (userName) => {\r\n        props.addUser(userName)\r\n        addUserInputRef.value = \"\";\r\n    }\r\n\r\n    const removeUserClick = (userName) => {\r\n        props.removeUser(userName)\r\n        removeUserInputRef.value = \"\";\r\n    }\r\n\r\n    let addUserInputRef = \"\";\r\n    let removeUserInputRef = \"\";\r\n\r\n    return (\r\n        <div>\r\n           \r\n            <div>\r\n            <input type=\"text\" placeholder=\"Enter user name\" onChange={getInput} ref = {(inputRef) => {addUserInputRef = inputRef }}/>\r\n            <button onClick = {()=>addUserClick(userName)}>Add User</button>\r\n            </div>\r\n            <div>\r\n            <input type=\"text\" placeholder=\"Enter user name\" onChange={getInput} ref = {(inputRef) => {removeUserInputRef = inputRef }}/>\r\n            <button onClick = {()=>removeUserClick(userName)}>Remove User</button>\r\n            </div>\r\n            <button onClick = {()=>props.displayUser()}>Display User</button>\r\n            <div>\r\n            {usersData.map((user,key) => (<li key={key}><span>{user.Name}</span></li>))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        sagaResponse:state.homereducer\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    displayUser:()=>dispatch({\r\n        type:\"DISPLAY USERS\"\r\n    }),\r\n    addUser:(user)=>dispatch({\r\n        type:\"ADD USER\",\r\n        user\r\n    }),\r\n    removeUser:(user)=>dispatch({\r\n        type:\"REMOVE USER\",\r\n        user\r\n    })\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home);\r\n\r\n","import { Provider } from 'react-redux';\nimport Hello from './components/home/container/home';\nimport store from '../src/redux/store';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n     <Hello/>\n     </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}